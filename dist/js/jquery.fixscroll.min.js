!function(t){var e=function(e,s){this.settings=s,this.el=e?t(e):".fix-item",this.elHeight=this.el?t(this.el).outerHeight():void 0,this.gapElSelector="."+this.gapClassName,this.getOffsetEl=this.el,this.offset=this.settings.offset,this.className=s.className};e.prototype.window=t(window),e.prototype.gapClassName="gap",e.prototype.createGapHtml=function(){return'<div class="'+this.gapClassName+'"></div>'},e.prototype.gapElHTML=e.prototype.createGapHtml(),e.prototype.init=function(){try{if("object"!=typeof this.el)throw"Please make the definitions";this.wScroll(),this.window.on("scroll",this.wScroll.bind(this)),this.settings.onInit&&this.settings.onInit.call(null,this.el)}catch(t){console.log(t)}},e.prototype.getElementOffset=function(t){return t.offset().top+this.elHeight},e.prototype.appendGap=function(){0===this.el.next(this.gapElSelector).length&&this.el.after(this.gapElHTML),this.el.next(this.gapElSelector).height(this.elHeight)},e.prototype.removeGap=function(){this.el.next(this.gapElSelector).length&&this.el.next(this.gapElSelector).remove()},e.prototype.wScroll=function(){this.getScrollTop()>this.getElementOffset(this.getOffsetEl)+this.offset?this.el.hasClass(this.className)||(this.appendGap(),this.el.addClass(this.className),this.getOffsetEl=this.el.next(this.gapElSelector)):this.el.hasClass(this.className)&&(this.removeGap(),this.el.removeClass(this.className),this.getOffsetEl=this.el),this.settings.onScroll&&this.settings.onScroll.call(null,this.el)},e.prototype.getScrollTop=function(){return this.window.scrollTop()},t.fn.fixScroll=function(s){var i=t.extend({offset:0,className:"fixed",onInit:t.noop,onScroll:t.noop},s);return this.each(function(){new e(this,i).init()})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5maXhzY3JvbGwubWluLmpzIl0sIm5hbWVzIjpbIiQiLCJmaXhTY3JvbGxMaWIiLCJlbCIsInNldHRpbmdzIiwidGhpcyIsImVsSGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJ1bmRlZmluZWQiLCJnYXBFbFNlbGVjdG9yIiwiZ2FwQ2xhc3NOYW1lIiwiZ2V0T2Zmc2V0RWwiLCJvZmZzZXQiLCJjbGFzc05hbWUiLCJwcm90b3R5cGUiLCJ3aW5kb3ciLCJjcmVhdGVHYXBIdG1sIiwiZ2FwRWxIVE1MIiwiaW5pdCIsIndTY3JvbGwiLCJvbiIsImJpbmQiLCJvbkluaXQiLCJjYWxsIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImdldEVsZW1lbnRPZmZzZXQiLCJvYmoiLCJ0b3AiLCJhcHBlbmRHYXAiLCJuZXh0IiwibGVuZ3RoIiwiYWZ0ZXIiLCJoZWlnaHQiLCJyZW1vdmVHYXAiLCJyZW1vdmUiLCJnZXRTY3JvbGxUb3AiLCJoYXNDbGFzcyIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJvblNjcm9sbCIsInNjcm9sbFRvcCIsImZuIiwiZml4U2Nyb2xsIiwib3B0aW9ucyIsImV4dGVuZCIsIm5vb3AiLCJlYWNoIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FBQyxTQUFVQSxHQUdQLElBQUlDLEVBQWUsU0FBVUMsRUFBSUMsR0FDN0JDLEtBQUtELFNBQVdBLEVBQ2hCQyxLQUFLRixHQUFLLEVBQU9GLEVBQUVFLEdBQU0sWUFDekJFLEtBQUtDLFNBQVlELEtBQU8sR0FBSUosRUFBRUksS0FBS0YsSUFBSUksbUJBQWdCQyxFQUN2REgsS0FBS0ksY0FBZ0IsSUFBTUosS0FBS0ssYUFDaENMLEtBQUtNLFlBQWNOLEtBQUtGLEdBQ3hCRSxLQUFLTyxPQUFTUCxLQUFLRCxTQUFTUSxPQUM1QlAsS0FBS1EsVUFBWVQsRUFBU1MsV0FJOUJYLEVBQWFZLFVBQVVDLE9BQVVkLEVBQUVjLFFBQ25DYixFQUFhWSxVQUFVSixhQUFlLE1BRXRDUixFQUFhWSxVQUFVRSxjQUFnQixXQUNuQyxNQUFPLGVBQWdCWCxLQUFLSyxhQUFjLFlBRzlDUixFQUFhWSxVQUFVRyxVQUFZZixFQUFhWSxVQUFVRSxnQkFHMURkLEVBQWFZLFVBQVVJLEtBQU8sV0FDMUIsSUFDSSxHQUFzQixpQkFBWmIsS0FBS0YsR0FNWCxLQUFNLDhCQUpORSxLQUFLYyxVQUNMZCxLQUFLVSxPQUFPSyxHQUFHLFNBQVVmLEtBQUtjLFFBQVFFLEtBQUtoQixPQU01Q0EsS0FBS0QsU0FBU2tCLFFBQ2JqQixLQUFLRCxTQUFTa0IsT0FBT0MsS0FBSyxLQUFLbEIsS0FBS0YsSUFHMUMsTUFBTXFCLEdBQ0pDLFFBQVFDLElBQUlGLEtBS3BCdEIsRUFBYVksVUFBVWEsaUJBQW1CLFNBQVVDLEdBQ2hELE9BQU9BLEVBQUloQixTQUFTaUIsSUFBTXhCLEtBQUtDLFVBR25DSixFQUFhWSxVQUFVZ0IsVUFBWSxXQUNnQixJQUE1Q3pCLEtBQUtGLEdBQUc0QixLQUFLMUIsS0FBS0ksZUFBZXVCLFFBQ2hDM0IsS0FBS0YsR0FBRzhCLE1BQU01QixLQUFLWSxXQUV2QlosS0FBS0YsR0FBRzRCLEtBQUsxQixLQUFLSSxlQUFleUIsT0FBTzdCLEtBQUtDLFdBR2pESixFQUFhWSxVQUFVcUIsVUFBWSxXQUM1QjlCLEtBQUtGLEdBQUc0QixLQUFLMUIsS0FBS0ksZUFBZXVCLFFBQ2hDM0IsS0FBS0YsR0FBRzRCLEtBQUsxQixLQUFLSSxlQUFlMkIsVUFLekNsQyxFQUFhWSxVQUFVSyxRQUFVLFdBRTFCZCxLQUFLZ0MsZUFBaUJoQyxLQUFLc0IsaUJBQWlCdEIsS0FBS00sYUFBZU4sS0FBS08sT0FDaEVQLEtBQUtGLEdBQUdtQyxTQUFTakMsS0FBS1EsYUFDdEJSLEtBQUt5QixZQUNMekIsS0FBS0YsR0FBR29DLFNBQVNsQyxLQUFLUSxXQUN0QlIsS0FBS00sWUFBY04sS0FBS0YsR0FBRzRCLEtBQUsxQixLQUFLSSxnQkFHdENKLEtBQUtGLEdBQUdtQyxTQUFTakMsS0FBS1EsYUFDckJSLEtBQUs4QixZQUNMOUIsS0FBS0YsR0FBR3FDLFlBQVluQyxLQUFLUSxXQUN6QlIsS0FBS00sWUFBY04sS0FBS0YsSUFJN0JFLEtBQUtELFNBQVNxQyxVQUNicEMsS0FBS0QsU0FBU3FDLFNBQVNsQixLQUFLLEtBQUtsQixLQUFLRixLQU05Q0QsRUFBYVksVUFBVXVCLGFBQWUsV0FDbEMsT0FBT2hDLEtBQUtVLE9BQU8yQixhQUl2QnpDLEVBQUUwQyxHQUFHQyxVQUFZLFNBQVVDLEdBRXZCLElBQUl6QyxFQUFXSCxFQUFFNkMsUUFDYmxDLE9BQVEsRUFDUkMsVUFBVyxRQUNYUyxPQUFRckIsRUFBRThDLEtBQ1ZOLFNBQVV4QyxFQUFFOEMsTUFDYkYsR0FFSCxPQUFPeEMsS0FBSzJDLEtBQU0sV0FDSixJQUFJOUMsRUFBYUcsS0FBTUQsR0FDN0JjLFdBSWQrQiIsImZpbGUiOiJqcXVlcnkuZml4c2Nyb2xsLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCkge1xyXG4gICAgLy8gQ29uc3RydWN0b3I7XHJcblxyXG4gICAgdmFyIGZpeFNjcm9sbExpYiA9IGZ1bmN0aW9uIChlbCwgc2V0dGluZ3MpIHtcclxuICAgICAgICB0aGlzLnNldHRpbmdzID0gc2V0dGluZ3M7XHJcbiAgICAgICAgdGhpcy5lbCA9IChlbCkgPyAkKGVsKSA6ICcuZml4LWl0ZW0nO1xyXG4gICAgICAgIHRoaXMuZWxIZWlnaHQgPSAodGhpcy5lbCkgPyAkKHRoaXMuZWwpLm91dGVySGVpZ2h0KCkgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5nYXBFbFNlbGVjdG9yID0gJy4nICsgdGhpcy5nYXBDbGFzc05hbWU7XHJcbiAgICAgICAgdGhpcy5nZXRPZmZzZXRFbCA9IHRoaXMuZWw7XHJcbiAgICAgICAgdGhpcy5vZmZzZXQgPSB0aGlzLnNldHRpbmdzLm9mZnNldDtcclxuICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IHNldHRpbmdzLmNsYXNzTmFtZTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gV2luZG93IERlZmluaXRpb25cclxuICAgIGZpeFNjcm9sbExpYi5wcm90b3R5cGUud2luZG93ID0gICQod2luZG93KTtcclxuICAgIGZpeFNjcm9sbExpYi5wcm90b3R5cGUuZ2FwQ2xhc3NOYW1lID0gJ2dhcCc7XHJcblxyXG4gICAgZml4U2Nyb2xsTGliLnByb3RvdHlwZS5jcmVhdGVHYXBIdG1sID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiAnPGRpdiBjbGFzcz1cIicrIHRoaXMuZ2FwQ2xhc3NOYW1lICsnXCI+PC9kaXY+JztcclxuICAgIH07XHJcblxyXG4gICAgZml4U2Nyb2xsTGliLnByb3RvdHlwZS5nYXBFbEhUTUwgPSBmaXhTY3JvbGxMaWIucHJvdG90eXBlLmNyZWF0ZUdhcEh0bWwoKTtcclxuXHJcbiAgICAvLyBJbml0IE1ldGhvZFxyXG4gICAgZml4U2Nyb2xsTGliLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmKHR5cGVvZiB0aGlzLmVsID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgICAgICAgICAgLy8gaWYgdGhpcy5lbCBhcmUgZGVmaW5lZCwgd2UgY2FuIGV4ZWN1dGUgdGhlIG1ldGhvZHMuXHJcbiAgICAgICAgICAgICAgICB0aGlzLndTY3JvbGwoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMud2luZG93Lm9uKCdzY3JvbGwnLCB0aGlzLndTY3JvbGwuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzLmVsIGlzIHVuZGVmaW5lZCwgd2Ugd2lsbCBnZXQgYW4gZXJyb3IuXHJcbiAgICAgICAgICAgICAgICB0aHJvdyAnUGxlYXNlIG1ha2UgdGhlIGRlZmluaXRpb25zJztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYodGhpcy5zZXR0aW5ncy5vbkluaXQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5vbkluaXQuY2FsbChudWxsLHRoaXMuZWwpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0gY2F0Y2goZXJyKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBHZXQgRWxlbWVudCdzIFBvc2l0aW9uIEluIFRoZSBEb2N1bWVudCBNZXRob2RcclxuICAgIGZpeFNjcm9sbExpYi5wcm90b3R5cGUuZ2V0RWxlbWVudE9mZnNldCA9IGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgICByZXR1cm4gb2JqLm9mZnNldCgpLnRvcCArIHRoaXMuZWxIZWlnaHQ7XHJcbiAgICB9O1xyXG5cclxuICAgIGZpeFNjcm9sbExpYi5wcm90b3R5cGUuYXBwZW5kR2FwID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmKHRoaXMuZWwubmV4dCh0aGlzLmdhcEVsU2VsZWN0b3IpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLmVsLmFmdGVyKHRoaXMuZ2FwRWxIVE1MKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5lbC5uZXh0KHRoaXMuZ2FwRWxTZWxlY3RvcikuaGVpZ2h0KHRoaXMuZWxIZWlnaHQpO1xyXG4gICAgfTtcclxuXHJcbiAgICBmaXhTY3JvbGxMaWIucHJvdG90eXBlLnJlbW92ZUdhcCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZih0aGlzLmVsLm5leHQodGhpcy5nYXBFbFNlbGVjdG9yKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5lbC5uZXh0KHRoaXMuZ2FwRWxTZWxlY3RvcikucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBTY3JvbGwgTWV0aG9kXHJcbiAgICBmaXhTY3JvbGxMaWIucHJvdG90eXBlLndTY3JvbGwgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIGlmKHRoaXMuZ2V0U2Nyb2xsVG9wKCkgPiB0aGlzLmdldEVsZW1lbnRPZmZzZXQodGhpcy5nZXRPZmZzZXRFbCkgKyB0aGlzLm9mZnNldCl7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmVsLmhhc0NsYXNzKHRoaXMuY2xhc3NOYW1lKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRHYXAoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWwuYWRkQ2xhc3ModGhpcy5jbGFzc05hbWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRPZmZzZXRFbCA9IHRoaXMuZWwubmV4dCh0aGlzLmdhcEVsU2VsZWN0b3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYodGhpcy5lbC5oYXNDbGFzcyh0aGlzLmNsYXNzTmFtZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlR2FwKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVsLnJlbW92ZUNsYXNzKHRoaXMuY2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0T2Zmc2V0RWwgPSB0aGlzLmVsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZih0aGlzLnNldHRpbmdzLm9uU2Nyb2xsKXtcclxuICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5vblNjcm9sbC5jYWxsKG51bGwsdGhpcy5lbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH07XHJcblxyXG4gICAgLy8gR2V0IFdpbmRvdyBTY3JvbGwgVG9wIE1ldGhvZFxyXG4gICAgZml4U2Nyb2xsTGliLnByb3RvdHlwZS5nZXRTY3JvbGxUb3AgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93LnNjcm9sbFRvcCgpO1xyXG4gICAgfTtcclxuXHJcblxyXG4gICAgJC5mbi5maXhTY3JvbGwgPSBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgICAgIC8vIEVzdGFibGlzaCBvdXIgZGVmYXVsdCBzZXR0aW5nc1xyXG4gICAgICAgIHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcclxuICAgICAgICAgICAgb2Zmc2V0OiAwLFxyXG4gICAgICAgICAgICBjbGFzc05hbWU6ICdmaXhlZCcsXHJcbiAgICAgICAgICAgIG9uSW5pdDogJC5ub29wLFxyXG4gICAgICAgICAgICBvblNjcm9sbDogJC5ub29wXHJcbiAgICAgICAgfSwgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgbGliID0gbmV3IGZpeFNjcm9sbExpYih0aGlzLCBzZXR0aW5ncyk7XHJcbiAgICAgICAgICAgIGxpYi5pbml0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxufShqUXVlcnkpKTtcclxuIl19
